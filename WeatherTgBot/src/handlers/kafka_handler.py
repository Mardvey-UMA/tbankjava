import logging
from typing import Optional
from aiogram import Bot
from datetime import datetime

from src.models.weather import KafkaWeatherResponseDTO

logger = logging.getLogger(__name__)

class KafkaMessageHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ Kafka"""
    
    def __init__(self, bot: Bot):
        self.bot = bot
    
    async def handle_message(self, telegram_id: str, weather_data: KafkaWeatherResponseDTO):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Kafka"""
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º –ø–æ–≥–æ–¥—ã
            message = "üå§ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã:\n\n"
            
            for forecast in weather_data.forecasts:
                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É –≤ —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç
                date = forecast.date.strftime("%Y-%m-%d")
                time = forecast.time.strftime("%H:%M")  # time.strftime —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ time
                
                message += (
                    f"üìÖ {date} {time}\n"
                    f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {forecast.temp}¬∞C\n"
                    f"üå° –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {forecast.feels_like}¬∞C\n"
                    f"üí® –í–µ—Ç–µ—Ä: {forecast.wind_speed} –º/—Å, {forecast.wind_dir}¬∞\n"
                    f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {forecast.humidity}%\n"
                    f"üå™ –î–∞–≤–ª–µ–Ω–∏–µ: {forecast.pressure} –ü–∞\n"
                    f"‚òÄÔ∏è –£–§-–∏–Ω–¥–µ–∫—Å: {forecast.uv_index}\n\n"
                )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await self.bot.send_message(
                chat_id=telegram_id,
                text=message
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Kafka: {e}")
            raise 